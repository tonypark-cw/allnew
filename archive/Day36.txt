Day-36

### mysql2

# cd /allnew/node/

# mkdir mysql2

## mysql2.js

const { connect } = require("http2");
const mysql = require("mysql2/promise");
const env = require("dotenv").config({ path: "../../.env" });

const db = async () => {
    try {
        //db connection
        let connection = await mysql.createConnection({
            host: process.env.host,
            user: process.env.user,
            password: process.env.password,
            database: process.env.database
        });

        // select query
        let [rows, fields] = await connection.query("select * from st_info");
        console.log(rows);

        // make insert data
        let data = {
            st_id: "202399",
            name: "Moon",
            dept: "Computer"
        }

        // insert query
        let [results] = await connection.query("insert into st_info set ?", data);
        console.log("data is Inserted~!!");

        let insertId = data.st_id;

        // select query of inserted data
        [rows, fields] = await connection.query("select * from st_info where st_id = ?", insertId);
        console.log(rows);

        // update query
        [results] = await connection.query("update st_info set dept = ? where st_id = ? ", ["Game", insertId]);
        console.log("data is Updated~!!");

        // select query of inserted data
        [rows, fields] = await connection.query("select * from st_info where st_id = ?", insertId);
        console.log(rows);

        // delete row
        [rows, fields] = await connection.query("delete from st_info where st_id = ?", insertId);
        console.log(rows);

        // select query all data
        [rows, fields] = await connection.query("select * from st_info");
        console.log(rows);

    } catch (error) {
        console.log(error);
    }
};

db();

# npm init -y

# npm install mysql2 dotenv

# node mysql2.js



### mysql2 - Web version

# cd ..

# cd -R mysql2 mysql2-web

# cd mysql2-web

# rm -rf node_modules package*

# mkdir /allnew/node/config

# cd /allnew/node/config


## pool.js

const mysql = require('mysql2')

const pool = mysql.createPool({
    // mysql connection info
    host: "192.168.1.12",
    port: 3306,
    user: "mysql",
    password: "1234",
    database: "testdb"
})

const promisePool = pool.promise()

module.exports = promisePool;


# npm install mysql2


# cd /allnew/node/mysql2-web

# cp ../mysql-sync-web/app.js .

# cp -r ../mysql-sync-web/public .

# cp -R ../mysql-sync-web/routes .

# npm init -y

# npm install mysql2 express body-parser cookie-parser morgan  path

## routes/main.js

const express = require('express')
const bodyParser = require('body-parser')
const app = express()
const pool = require("../config/pool");

app.use(bodyParser.json())
app.use(bodyParser.urlencoded({ extended: false }))
app.use(express.json())
app.use(express.urlencoded({ extended: true }))

app.get("/Hello", (req, res) => {
    res.send("Hello World")
})

// Select all rows from st_info table
app.get("/select", async (req, res) => {
    const [rows, fields] = await pool.query("SELECT * FROM st_info");
    console.log(rows);
    res.writeHead(200);
    var template = `
  <!doctype html>
  <html>
  <head>
    <title>Result</title>
    <meta charset="utf-8">
  </head>
  <body>
   <table border="1" margin:auto; text-align:center;>
     <tr>
       <th>ST_ID</th>
       <th>NAME</th>
       <th>DEPT</th>
     </tr>
   `;
    for (var i = 0; i < rows.length; i++) {
        template += `
     <tr>
       <th>${rows[i]['ST_ID']}</th>
       <th>${rows[i]['NAME']}</th>
       <th>${rows[i]['DEPT']}</th>
     </tr>
    `
    }
    template += `
     </table>
  </body>
  </html>
 `;
    res.end(template);
})

// insert data into st_info table
app.get("/insert", async(req, res) => {
    const { ST_ID, NAME, DEPT } = req.query
    const [rows, fields] = await pool.query(
        "INSERT INTO st_info values (?, ?, ?)", [
        ST_ID,
        NAME,
        DEPT
    ]);

        res.redirect('/select');
})

// update row from st_info table
app.get("/update", async(req, res) => {
    const { ST_ID, NAME, DEPT } = req.query
    const [rows, fields] = await pool.query("UPDATE st_info SET NAME=?, DEPT=? WHERE ST_ID=?", [
        NAME,
        DEPT,
        ST_ID
    ]);

        res.redirect('/select');
})

// delete row from st_info table
app.get("/delete", async (req, res) => {
    const ST_ID = req.query.ST_ID
    const [results] = await pool.query("DELETE FROM st_info WHERE ST_ID=?", [
        ST_ID
    ]);

       res.redirect('/select');
})

module.exports = app;


# nodemon app.js


## .gitignore

## nodejs
node/**/node_modules
node/**/package-lock.json
node/config/pool.js




